<?php

/**
 * Implements hook_menu
 *
 * @return string
 */
function node_json_menu() {
  $items = array();
  $items['node-json/types']   = array(
    'title'            => NULL,
    'page callback'    => 'node_json_get_all_content_types',
    'page arguments'   => array(2),
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
  );
  $items['node-json/nodes/%'] = array(
    'title'            => NULL,
    'page callback'    => 'node_json_get_all_nids_by_type',
    'page arguments'   => array(2),
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
  );
  $items['node/%/json'] = array(
    'title'            => NULL,
    'page callback'    => 'node_json_node_in_json',
    'page arguments'   => array(1),
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Prints a node in JSON format
 *
 * @param type $nid
 */
function node_json_node_in_json($nid) {
  $node = node_load($nid);

  if (is_object($node)) {
    print json_encode($node);
    die;
  }
}

/**
 * Prints the nids of the node types specified in JSON format
 *
 * @param string $type
 */
function node_json_get_all_nids_by_type($type) {
  $result = db_query("SELECT nid FROM node WHERE status = 1 AND type = '%s' ORDER BY nid", array('%s' => $type));
  $nids   = array();
  while ($row    = db_fetch_object($result)) {
    $nids[] = $row->nid;
  }

  print json_encode($nids);
  die;
}

/**
 * Prints the nids of the node types specified in JSON format
 *
 * @param string $type
 */
function node_json_get_all_content_types() {
  $result = db_query("SELECT DISTINCT type FROM node WHERE status = 1 ORDER BY type");
  $types  = array();
  while ($row    = db_fetch_object($result)) {
    $types[] = $row->type;
  }

  print json_encode($types);
  die;
}
